var onRun = function(context) {
    log('Pseudolocalize text layers or texts on page');

    var documentName   = context.document.displayName();
    var selectedLayers = context.selection;
    var selectedCount  = selectedLayers.count();

    //call choice panel
    var options   = ['Thai', 'Vietnam'];
    var choice    = createSelect('Pseudolocalize to', options, 0);
    var expansion = 0; //initiate expansion rate
    //log(choice[1]);
    //show pseudolocalization choice. Thai expand on 15% rate
    switch (choice[1]) {
      case 0:
        context.document.showMessage("Pseudolocalize from EN to TH");
        expansion = 0.15; //expansion rate for Thailand
        break;
      case 1:
        context.document.showMessage("Pseudolocalize from EN to VI");
        expansion = 0.35; //expansion rate for Thailand
        break;
      default:
        log("");
    }

    // check if there is no layer selected
    if (selectedCount == 0) {
        // proceed with selecting text layers in whole page
        log('No layers are selected.');
        context.document.showMessage("Pseudolocalize all text in this page")
        log(context.document.currentPage().layers());
        // collecting all text layers
        var layers = context.document.currentPage().children();
        log(layers);
        var layersCount = layers.count();
        for (var i = 0; i < layersCount; i++) {
            var layer = layers[i];
            if (layer.isKindOfClass(MSTextLayer)) {
                log((i + 1) + '. ' + layer.name() + ': ' + layer.stringValue());
                log(layer.stringValue().length());
                //layer.setStringValue();
                //remove spaces from string
                layer.setStringValue(layer.stringValue().replace(/\s+/g, ''));
                //locale string from text layers

            }
        }
    } else {
        log('Selected text layers:');
        for (var i = 0; i < selectedCount; i++) {
            var layer = selectedLayers[i];
            if (layer.isKindOfClass(MSTextLayer)) {
                log((i + 1) + '. ' + layer.name() + ': ' + layer.stringValue());
                log(layer.stringValue().length());
            
                var newtext = repeat(layer.stringValue(), 2);
                layer.setStringValue(newtext);
                //resize text layer fit its content
                [layer adjustFrameToFit];
            }
        }
    };

    //create options for pseudolocalization
    function createSelect(msg, items, selectedItemIndex) {
        selectedItemIndex = selectedItemIndex || 0

        var accessory = NSComboBox.alloc().initWithFrame(NSMakeRect(0, 0, 200, 25))
        accessory.addItemsWithObjectValues(items)
        accessory.selectItemAtIndex(selectedItemIndex)
        var alert = NSAlert.alloc().init()
        alert.setMessageText(msg)
        alert.addButtonWithTitle('Pseudolocalize')
        alert.addButtonWithTitle('Cancel')
        alert.setAccessoryView(accessory)
        var responseCode = alert.runModal()
        var sel = accessory.indexOfSelectedItem()
        return [responseCode, sel]
    }
    //function for repeating string
    function repeat(pattern, count) {
    if (count < 1) return '';
    var result = '';
    while (count > 1) {
        if (count & 1) result += pattern;
        count >>= 1, pattern += pattern;
    }
    return result + pattern;
    }
    
    var view = context.document.currentView()
    view.refresh;
};